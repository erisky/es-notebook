
 # Install postgre on ubuntu
 sudo apt-get install postgresql 

# create user

sudo -u postgres createuser owning_user
# use the postgre user to create db for eric
sudo -u postgres createdb -O eric mydb

sample1:
	gcc  -I/usr/include/postgresql/ -o sample1  sample1.c -lpq



sudo -u postgres  createuser eric
createdb mydb
sudo su -postgres
sudo su postgres


# list all tables

     SELECT table_name 
     FROM information_schema.tables 
     WHERE table_type = 'BASE TABLE' 
         AND table_schema = 'public' 
         ORDER BY table_type, table_name
         ;


#insert:
insert into ap_info (ap_id, ap_name) values ('010203040506', 'sample-name')

# select 
select * from cities;
     name      | location  
---------------+-----------
 San Francisco | (-194,53)


select ap_id,ap_name from ap_info

SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;

# order the output
select * from weather order by temp_lo;

     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 hsinchu       |      35 |      50 | 0.25 | 1998-12-21
 Hayward       |      37 |      54 |      | 1994-11-29
 San Francisco |      46 |      50 | 0.25 | 1994-11-27

## JOIN ###

SELECT *
    FROM weather, cities
    WHERE city = name;

     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 1994-11-27 | San Francisco | (-194,53)


or 

SELECT weather.city, weather.temp_lo, weather.temp_hi,
       weather.prcp, weather.date, cities.location
    FROM weather, cities
    WHERE cities.name = weather.city;


SELECT *
    FROM weather w, cities c
    WHERE w.city = c.name;

## self JOIN ###
used to compare to self data nxn...

SELECT W1.city, W1.temp_lo AS low, W1.temp_hi AS high,
    W2.city, W2.temp_lo AS low, W2.temp_hi AS high
    FROM weather W1, weather W2
    WHERE W1.temp_lo < W2.temp_lo
    AND W1.temp_hi > W2.temp_hi;



## Aggregate Functions ###

SELECT max(temp_lo) FROM weather;

SELECT city FROM weather
    WHERE temp_lo = (SELECT max(temp_lo) FROM weather);



### !!! UPDATE !!! ###

UPDATE weather
    SET temp_hi = temp_hi - 2,  temp_lo = temp_lo - 2
    WHERE date > '1994-11-28';


 # delete
DELETE FROM weather WHERE city = 'Hayward';


#### Create View ####

CREATE VIEW myview AS
    SELECT city, temp_lo, temp_hi, prcp, date, location
        FROM weather, cities
        WHERE city = name;

SELECT * FROM myview;



#### Foreign Key ####


create table ap_info ( 
      ap_id  varchar(12),
      ap_group varchar(80) references ap_group(group_id),
      uptime date,
      state int,
      down_time date);


create table ap_group (
       group_id  varchar(80) primary key,
       mapping   json
		);

## Insert 
insert into ap_info values('010203040506', 'fall');
>> failed because of foriegh key check failed.
ERROR:  insert or update on table "ap_info" violates foreign key constraint "ap_info_ap_group_fkey"



STORE FILES on DATABASES??
==> https://stackoverflow.com/questions/154707/what-is-the-best-way-to-store-media-files-on-a-database

==> https://stackoverflow.com/questions/13420305/storing-files-in-sql-server


# list all tables 
test=> SELECT table_name  FROM information_schema.tables 
WHERE table_type = 'BASE TABLE' 
AND table_schema = 'public' 
ORDER BY table_type, table_name;
  table_name  


## Start pgadmin ##
python ~/.local/lib/python2.7/site-packages/pgadmin4/pgAdmin4.py


## LEO Login server/account
# 
DB login : psql -U wifidog -h 10.194.22.88 -d test -W // wd1234  

# Insert json is OK !! 
->
insert into ap_group values('group_id1', '{
    "AP_RUNTIME_CFG":"010203_CFG",
    "Updated":243513232, 
    "change": [{
        "PROFILE": "PROF_RADIO",
        "INTF": "wifi0",
        "values": {
                "channel": "1",
                "tpscale": "2"
        }
 },
 {
        "PROFILE": "PROF_RADIO",
        "INTF": "wifi1",
        "values": {
                "channel": "36",
                "tpscale": "3"
        }
 }]
}');

## change password:
eric@eric-n809996:~/spf5$ psql
sql (9.5.7)
Type "help" for help.

eric=> \password
Enter new password: 
Enter it again: 
eric=> \q

	
[CAPIs]
PQexec
conninfo = "host=10.194.22.88 dbname=test user=wifidog password=wd1234";
conn = PQconnectdb(conninfo);

PGconn *PQconnectdb(const char *conninfo);

#### main api, sychronized ####
PGresult *PQexec(PGconn *conn, const char *command);
PQclear(res);   

int PQntuples(const PGresult *res); // number of rows/tuples
int PQnfields(const PGresult *res); // number of fields
char *PQgetvalue(const PGresult *res,
                 int row_number,
                 int column_number);
############################################################


int PQsendQuery(PGconn *conn, const char *command);
PGresult *PQgetResult(PGconn *conn);
int PQconsumeInput(PGconn *conn);

############################################################



-- Table: ap_list.ap5400w

-- DROP TABLE ap_list.ap5400w;

CREATE TABLE ap_list.ap5400w_d50
(
    name character(32) COLLATE pg_catalog."default" NOT NULL,
    mac character(18) COLLATE pg_catalog."default" NOT NULL,
    ssid character(1)[] COLLATE pg_catalog."default",
    ip character(32) COLLATE pg_catalog."default" NOT NULL,
    location character(32) COLLATE pg_catalog."default",
    loading character(16) COLLATE pg_catalog."default",
    memfree integer,
    up_time integer,
    product character(64) COLLATE pg_catalog."default" NOT NULL,
    fw_version character(16) COLLATE pg_catalog."default" NOT NULL,
    online boolean NOT NULL,
    ap_group character(32) COLLATE pg_catalog."default",
    config jsonb NOT NULL,
    update_time timestamp without time zone NOT NULL DEFAULT timezone('utc'::text, now()),
    CONSTRAINT ap5400w_d50_pkey PRIMARY KEY (mac),
    CONSTRAINT ap5400w_d50_name_key UNIQUE (name)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE ap_list.ap5400w_d50
    OWNER to wifidog;


#>> Insert AP group <<<
INSERT INTO public.ap_group(
	group_name, model, product, fw_version, country, config, update_time)
	VALUES ('group1', 'ap5400w', 'ap5400w-d50', 'ap5400w-d50-1.1.2', 'TW', '{"CONFIG":"NONE"}', '2017-08-09 10:23:54');






