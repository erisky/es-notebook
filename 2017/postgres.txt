sample1:
	gcc  -I/usr/include/postgresql/ -o sample1  sample1.c -lpq



sudo -u postgres  createuser eric
createdb mydb
sudo su -postgres
sudo su postgres


# list all tables

     SELECT table_name 
     FROM information_schema.tables 
     WHERE table_type = 'BASE TABLE' 
         AND table_schema = 'public' 
         ORDER BY table_type, table_name
         ;


#insert:
insert into ap_info (ap_id, ap_name) values ('010203040506', 'sample-name')

# select 
select * from cities;
     name      | location  
---------------+-----------
 San Francisco | (-194,53)


select ap_id,ap_name from ap_info

SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;

# order the output
select * from weather order by temp_lo;

     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 hsinchu       |      35 |      50 | 0.25 | 1998-12-21
 Hayward       |      37 |      54 |      | 1994-11-29
 San Francisco |      46 |      50 | 0.25 | 1994-11-27

## JOIN ###

SELECT *
    FROM weather, cities
    WHERE city = name;

     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 1994-11-27 | San Francisco | (-194,53)


or 

SELECT weather.city, weather.temp_lo, weather.temp_hi,
       weather.prcp, weather.date, cities.location
    FROM weather, cities
    WHERE cities.name = weather.city;


SELECT *
    FROM weather w, cities c
    WHERE w.city = c.name;

## self JOIN ###
used to compare to self data nxn...

SELECT W1.city, W1.temp_lo AS low, W1.temp_hi AS high,
    W2.city, W2.temp_lo AS low, W2.temp_hi AS high
    FROM weather W1, weather W2
    WHERE W1.temp_lo < W2.temp_lo
    AND W1.temp_hi > W2.temp_hi;



## Aggregate Functions ###

SELECT max(temp_lo) FROM weather;

SELECT city FROM weather
    WHERE temp_lo = (SELECT max(temp_lo) FROM weather);



### !!! UPDATE !!! ###

UPDATE weather
    SET temp_hi = temp_hi - 2,  temp_lo = temp_lo - 2
    WHERE date > '1994-11-28';


 # delete
DELETE FROM weather WHERE city = 'Hayward';


#### Create View ####

CREATE VIEW myview AS
    SELECT city, temp_lo, temp_hi, prcp, date, location
        FROM weather, cities
        WHERE city = name;

SELECT * FROM myview;



#### Foreign Key ####


create table ap_info ( 
      ap_id  varchar(12),
      ap_group varchar(80) references ap_group(group_id),
      uptime date,
      state int,
      down_time date);


create table ap_group (
       group_id  varchar(80) primary key,
       mapping   json
		);

## Insert 
insert into ap_info values('010203040506', 'fall');
>> failed because of foriegh key check failed.
ERROR:  insert or update on table "ap_info" violates foreign key constraint "ap_info_ap_group_fkey"







STORE FILES on DATABASES??
==> https://stackoverflow.com/questions/154707/what-is-the-best-way-to-store-media-files-on-a-database

==> https://stackoverflow.com/questions/13420305/storing-files-in-sql-server









	

