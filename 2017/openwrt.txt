
initial scripts

procd.sh

related to ubox
-----------------

package installation  related:

check files @ 
~/work/spf_50/repo/qsdk/staging_dir/target-arm_cortex-a7_uClibc-1.0.14_eabi/pkginfo/
Related scripts
--> scripts/gen-dependencies.sh
--> include/package-ipkg.mk





# to debug using wireshrk
ssh root@192.168.1.1 "tcpdump -i ath0 -s 0 -K -n -w -" | wireshark -k -i -

debug wsplcd

ssh root@192.168.1.11 "tcpdump -i ath21 -s 0 -K -n -w -" | wireshark -k -i -
ieee_1905.1 && eth.addr == B4:EE:B4:E9:96:07

####################################################################
OpenWrt build system – Build sequence

tools – automake, autoconf, sed, cmake
toolchain/binutils – as, ld, …
toolchain/gcc – gcc, g++, cpp, …
target/linux – kernel modules
package – core and feed packages
target/linux – kernel image
target/linux/image – firmware image file generation


[single package]
make package/cups/{clean,compile,install} V=s

[spot the build error]
make V=s 2>&1 | tee build.log | grep -i error

[skipping failed packages]
IGNORE_ERRORS=1 make <make options>

[Cleans]
make clean  --> remove all in build_dir and bin ,  ** Keep the toolchain

make distclean --> remove everything

make package/luci/clean --> remove specific pacakge


#####  IMAGE UBI/ubi creation  #####

/home/eric/spf5_test/spf5_0907/spf5/qualcomm_sdk/qsdk/scripts/ubinize-image.sh
Makefile:
Image/Build/ubifs
Image/UbiImage


1. add ubifs in xml 

2. modify nand-flash.conf

[askey-rootfs]
partition = rootfs
filename = rt4230w-ubi-root.img
layout = linux

[askey-ubifs]
partition = ubifs
filename = rt4230w-ubi-fs.img
layout = linux

3.1 
    add ubi-fs-xxxx.cfg @ 

3.2. find build_its.sh in meta script and modify it
   the charter create here !!!
  
   ubinize -m 2048 -p 128KiB -o $IPQ_DIR/fs.ubi $IPQ_DIR/ubi-fs-rt4230w.cfg

	ubinize -m 2048 -p 128KiB -o $IPQ_DIR/fs.ubi $IPQ_DIR/ubi-fs-rt4230w.cfg
        dd if=$IPQ_DIR/fs.ubi of=$IPQ_DIR/rt4230w-ubi-fs.img bs=2k conv=sync


#### dual image ###

# show which maps on ubi0
cat /sys/devices/virtual/ubi/ubi0/mtd_num 

when using mtd13, free:
rootfs                   14.3M    256.0K     13.3M   2% /
when using mtd12, free:
rootfs                   16.1M    256.0K     15.0M   2% /

## check 
./drivers/platform/msm/bootconfig.c

cat /proc/boot_info/getbinary_bootconfig > boot.bin
hexdump -C boot.bin
>>>uboot related file 
u-boot/arch/arm/cpu/armv7/ipq/smem.c
Find IPQ_ROOT_FS_ALT_PART_NAME
>> 
arch/arm/cpu/armv7/ipq/cmd_bootipq.c
arch/arm/lib/bootm.c


### Bootconfig information ###
 cat /proc/boot_info/getbinary_bootconfig > boot.bin
operator@ap5400w:~# hexdump -C boot.bin 
00000000  a0 a1 a2 a3 08 00 00 00  05 00 00 00 30 3a 51 53  |............0:QS|
00000010  45 45 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |EE..............|
00000020  30 3a 43 44 54 00 00 00  00 00 00 00 00 00 00 00  |0:CDT...........|
00000030  00 00 00 00 30 3a 41 50  50 53 42 4c 00 00 00 00  |....0:APPSBL....|
00000040  00 00 00 00 00 00 00 00  30 3a 48 4c 4f 53 00 00  |........0:HLOS..|
00000050  00 00 00 00 00 00 00 00  00 00 00 00 72 6f 6f 74  |............root|
00000060  66 73 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |fs..............|
                                               ** --> primaryboot flag 0 or 1																	
00000070  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 b0 b1 b2 b3  |................|

operator@ap5400w:~# hexdump -C /tmp/vendor/rootfs_on_13/boot.bin 
00000000  a0 a1 a2 a3 07 00 00 00  05 00 00 00 30 3a 51 53  |............0:QS|
00000010  45 45 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |EE..............|
00000020  30 3a 43 44 54 00 00 00  00 00 00 00 00 00 00 00  |0:CDT...........|
00000030  00 00 00 00 30 3a 41 50  50 53 42 4c 00 00 00 00  |....0:APPSBL....|
00000040  00 00 00 00 00 00 00 00  30 3a 48 4c 4f 53 00 00  |........0:HLOS..|
00000050  00 00 00 00 00 00 00 00  00 00 00 00 72 6f 6f 74  |............root|
00000060  66 73 00 00 00 00 00 00  00 00 00 00 01 00 00 00  |fs..............|
                                               ** --> primaryboot flag
00000070  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 b0 b1 b2 b3  |................|
000000b0
operator@ap5400w:~# hexdump -C boot.bin 
00000000  a0 a1 a2 a3 08 00 00 00  05 00 00 00 30 3a 51 53  |............0:QS|
00000010  45 45 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |EE..............|
00000020  30 3a 43 44 54 00 00 00  00 00 00 00 00 00 00 00  |0:CDT...........|
00000030  00 00 00 00 30 3a 41 50  50 53 42 4c 00 00 00 00  |....0:APPSBL....|
00000040  00 00 00 00 00 00 00 00  30 3a 48 4c 4f 53 00 00  |........0:HLOS..|
00000050  00 00 00 00 00 00 00 00  00 00 00 00 72 6f 6f 74  |............root|
00000060  66 73 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |fs..............|
00000070  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 b0 b1 b2 b3  |................|




--> struct ipq_smem_bootconfig_v2_info


===> NAND ROOTFS has limitation of size 64MB?



################## image location :

.../build_dir/target-arm_cortex-a7_uClibc-1.0.14_eabi/linux-ipq806x/root-ap5400w.ubi





ubiattach .... fail ..

ubiformat /dev/mtd14
ubiattach /dev/mtd14
ubimkvol /dev/ubi1 -s 10MiB -N log
ubimkvol /dev/ubi1 -m -N vendor
mount -t ubifs /dev/ubi1_0 /tmp/test


last steps: ... 
make[3] package/preconfig
 make[2] target/install
 make[3] -C target/linux install
 make[2] package/index

##### Create Image only #####Image/Build/ubifs
 make target/install
>>> but still takes long time

# UBIFS #
mount -t ubifs ubi0:rootfs_config /mnt/config/


mkdir /mnt/log
mkdir /mnt/config
mount -t ubifs  ubi0:rootfs_config /mnt/config
mount -t ubifs  ubi0:rootfs_log /mnt/log


reboot -s pumax  == > busybox  == > patch_halt99 -->  099-halt_reboot.patch
==> /tmp/vendor/rebootsign.txt

skysoft/skysoft_detection/src/main.c ==> 
	cp /tmp/vendor/rebootInfo /etc/config/rebootInfo -f
	> process reason and  --> update to uci 
    > process proc --- > from """ cat /proc/cmdline | awk -F 'rea=' '{print $2} """

operator@rt4230w:/tmp/vendor# cat /proc/cmdline
console=ttyMSM0,115200n8 ubi.mtd=rootfs root=mtd:ubi_rootfs rootfstype=squashfs rea=ffffffff time=ffffffff console=ttyMSM0,115200n8

--> kernel boot parameters:
  >>> ./base/software/common_IPQ8064/qsdk/qca/src/u-boot/arch/arm/cpu/armv7/ipq/cmd_bootipq.c

cmd_bootipq.c
cmd_bootipq.c
cmd_bootipq.c


At boot:
/etc/init.d/detection --> 


<<CHARTER>>
/etc/preinit -- > /lib/functions/preinit.sh
  > for pi_source_file in /lib/preinit/*; do
  >      . $pi_source_file
  > done


Foundable puma reasons:
puma0 "bootloader"      // 0x77665500----bootloader
- ./product/charter_sw_for_rt4230w-d187/code/qsdk/qca/src/linux-3.14/drivers/soc/qcom/restart_reason.c
puma1 "User reboot"        // 0x77665501----reboot cmd
./product/charter_sw_for_rt4230w-d187/code/qsdk/qca/src/linux-3.14/drivers/soc/qcom/restart_reason.c
puma2 "Recovery"       // 0x77665502---recovery
>> NOT FOUND
puma3 "Unknown"            // 0x77665503
- from proc/cmdline 
./product/charter_sw_for_rt4230w-d187/code/qsdk/qca/src/linux-3.14/drivers/soc/qcom/restart_reason.c
puma4 "System panic"   // 0x77665504
- from proc/cmdline 
./product/charter_sw_for_rt4230w-d187/code/qsdk/qca/src/linux-3.14/drivers/soc/qcom/restart_reason.c
puma5 "CPU not enough" // 0x77665505
- skysoft_detection:  cpu_timeout_op
puma6 "MEM not enough" // 0x77665506
- skysoft_detection: mem_timeout_op
puma7 "PING barrier"   // 0x77665507
- skysoft_detection: do_ping_check
puma8 "FW update"      // 0x77665508mem_timeout_op
- Not found
puma9 "Config restore" // 0x77665509
- ./base/software/common/qsdk/package/skysoft/skysoft_tr_oneagent/src/interface/xml/fw_upgrade.c
- ./base/software/common/qsdk/package/skysoft/skysoft_web_admin/cgi/cgi_main.c
pumaa "GUI reboot"     // 0x7766550a
- ./base/software/common/qsdk/package/skysoft/skysoft_web_admin/cgi/cgi_main.c
pumab "GUI factory reset"  // 0x7766550b
- ./base/software/common/qsdk/package/skysoft/skysoft_web_admin/cgi/function/adminfw.c
pumac "Button reboot"      // 0x7766550c
- ./base/software/common/qsdk/package/base-files/files/etc/rc.button/reset
- ./base/software/common/qsdk/package/base-files/files/sbin/reset_button_pressed
pumad "Button factory reset"   //0x7766550d
./base/software/common/qsdk/package/base-files/files/sbin/reset_button_pressed:reset_to_factory_settings.sh -s pumad
pumae "TR-069 reboot RPC"  //0x7766550e
- base/software/common/qsdk/package/skysoft/skysoft_tr_oneagent/src/source/session.c
pumaf "TR-069 factory reset RPC" //0x7766550f
- ./base/software/common/qsdk/package/skysoft/skysoft_tr_oneagent/src/interface/xml/tr_lib.c:	strcpy(cmd,"/sbin/reset_to_factory_settings.sh -s pumaf");
puma10 "Software watchdog reboot"// 0x77665510
- NOTFOUND
puma11 "Hardware watchdog" // 0x77665511
- from proc/cmdline 
> u-boot/arch/arm/cpu/armv7/ipq/cmd_bootipq.c
puma12 "Power loss"        // 0x77665512
puma13 "Device power up"   // 0x77665513   
- from proc/cmdline 



./qsdk/package/base-files/files/etc/rc.button/reset:		reboot -s pumac
./qsdk/package/base-files/files/etc/rc.button/reset:		(sleep 10; sync; reboot -f) &
./qsdk/package/base-files/files/lib/upgrade/common.sh:		/sbin/pivot_root /usr/bin/wget /sbin/reboot /bin/sync /bin/dd	\
./qsdk/package/base-files/files/lib/upgrade/common.sh:		echo "Failed to switch over to ramfs. Please reboot."
./qsdk/package/base-files/files/lib/upgrade/common.sh:		reboot -f
./qsdk/package/base-files/files/sbin/sysupgrade:	-d <delay>   add a delay before rebooting
./qsdk/package/base-files/files/sbin/reset_button_pressed:trap 'echo "######## SYSTEM REBOOT!########" >> /dev/console ; sync; reboot -s pumac;' TERM INT USR1 USR2
./qsdk/package/skysoft/skysoft_detection/src/main.c:	system("cp /etc/config/rebootInfo /tmp/vendor/rebootInfo  -f");
./qsdk/package/skysoft/skysoft_detection/src/main.c:	system("cp /tmp/vendor/rebootInfo /etc/config/rebootInfo -f");
./qsdk/package/skysoft/skysoft_web_admin/cgi/function/wizard.c:		ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./qsdk/package/skysoft/skysoft_web_admin/cgi/function/wizard.c:	ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./qsdk/package/skysoft/skysoft_web_admin/cgi/function/wizard.c:	ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./qsdk/package/skysoft/skysoft_web_admin/www/script/init.js://                var html = '<p style="line-height: 32px;font-size:20px;font-family: Arial,sans-serif;color:#f5f5f7;width:800px;margin:60px auto">'+RouterPage.langMap.err.tx_rebooterror+'</p>'
./qsdk/target/linux/ipq806x/base-files/lib/upgrade/platform.sh:		reboot
./qsdk/target/linux/ipq806x/base-files/lib/upgrade/platform.sh:			reboot
./qsdk/target/linux/ipq806x/base-files/sbin/reset_to_factory_settings.sh:jffs2reset -y; reboot $1 $2
./qsdk/target/linux/ipq806x/base-files/sbin/reset_to_factory_settings.sh:sleep 10; sync; reboot -f
./web/model/ap5400w/code/function/wizard.c:		ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./web/model/ap5400w/code/function/wizard.c:	ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./web/model/ap5400w/code/function/wizard.c:	ret = do_cmd("(sleep 1; reboot; sleep 10; sync; reboot -f) &");
./web/common/page/script/init.js://                var html = '<p style="line-height: 32px;font-size:20px;font-family: 'open_sansregular',sans-serif;color:#f5f5f7;width:800px;margin:60px auto">'+RouterPage.langMap.err.tx_rebooterror+'</p>'
./web/common/code/cgi_main.c:				do_cmd("(sleep 1 && reboot -f) &"); //ak9 sarah 20170523
./web/common/code/function/routerview.c:	ret = do_cmd("(sleep 1 && reboot -f) &");  //AK9 Casper, use reboot -f to avoid reboot fail




askey-ap5400w-rev1.dts
askey-ap5400w-rev1.dtsi
drivers/soc/qcom/scm_restart_reason.c





