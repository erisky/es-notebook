
[Git tag usage]

git tag -l
git tag -n
git tag -d Label_0.0.1 
git tag -am "Initial spf40 clean build version" label_v0.0.1
git push --tags origin master 
git pull --tags 
git push --delete origin Label_0.0.1 

# To archive a git repo
git archive --format=tar.gz --prefix=git-1.4.0/ v1.4.0 >git-1.4.0.tar.gz
git archive --prefix=git-1.4.0/ -o git-1.4.0.tar.gz v1.4.0

# Note, it's not able to use git arhchieve for repo dirs since it contain many gits

example 
git rebase -i   <version 1>

 pick    <vesion 2>
 squash  <vesion 3>

--> <version 2> and <version 3> will be merged 


revise most recent commit message
git commit --amend


---- git config user/password ---
# Actually need to configure the ssh
ssh-keygen 
ssh-copy-id -i ~/.ssh/id_rsa d900@10.194.20.21
ssh-copy-id -i ~/.ssh/id_rsa d900@10.194.20.21
git pull
--> 

# discard local commits
git reset --hard 27ad6b04c635e80ffb96ef0daa3a555670e00ab2


# a good way to get git version info
git describe --dirty --long --always

#
git config --global  branch.autosetuprebase always

# force push current (local) to server
git push -f origin HEAD:master

# allow repostoy update by push:
git config receive.denyCurrentBranch ignore


## switch to bitbucket ###
git config --global user.email "eric9_chen@askey.com"

cd existing-project
git remote set-url origin https://eric9_chen@bitbucket.askey.com.tw:8443/scm/cmmiar/argus.git
git push -u origin master
git config --global http.sslverify false

=== [auto commit d900 to jira] ===
# checkout jira-awos (pwd= /home/eric/work/awos/spf5)
git remote  add d900_spf5 d900@10.194.20.21:spf5
# pull from d900
git pull d900_spf5 master
# push back
git push

git remote  add d900_spf5 d900@10.194.20.21:tmp_git/20180104
git remote  add d900_spf5 d900@10.194.20.21:server
git remote  add d900_spf5 d900@10.194.20.21:spf5-mips


## store https password
add :
[credential]
        helper = store


### Delete remote branch ###
$ git push <remote_name> --delete <branch_name>

or 

$ git push <remote_name> :<branch_name>


